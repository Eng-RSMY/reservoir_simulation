function dmatrix = dcoeffunctionm(location,state)
% 
n1 = 4;
nr = numel(location.x);
s = get_parameters;
dmatrix = zeros(n1,nr);

% an n^2 element matrix 

dmatrix(1,:) = s.phim.*cg_mahmood(...
    state.u(1,:),state.u(2,:),s.Pc,s.Tc).*rho_mahmood(...
    state.u(1,:),state.u(2,:),s.Pc,s.Tc) + (...
    1-s.phim).*(1-(state.u(1,:).*isosteric_heat(...
    state.u(1,:),state.u(2,:),s.Pc,s.Tc).*gammag_mahmood(...
    state.u(1,:),state.u(2,:),s.Pc,s.Tc))).*(...
    s.rhos).*adsorbed_derivative(state.u(1,:),s.PL,s.VL);
dmatrix(2,:) = (1-s.phim).*s.rhos.*s.MW.*isosteric_heat(...
    state.u(1,:),state.u(2,:),s.Pc,s.Tc).*adsorbed_derivative(...
    state.u(1,:),s.PL,s.VL);
dmatrix(3,:) = s.phim.*alphag_mahmood(...
    state.u(1,:),s.T,s.Pc,s.Tc).*rho_mahmood(...
    state.u(1,:),s.T,s.Pc,s.Tc) + (...
    1-s.phim).*(s.rhos).*adsorbed_derivative(...
    state.u(1,:),s.PL,s.VL).*((1./gammag_mahmood(...
    state.u(1,:),state.u(2,:),s.Pc,s.Tc))-(...
    state.u(1,:).*isosteric_heat(state.u(1,:),state.u(2,:),s.Pc,s.Tc)));
dmatrix(4,:) = s.phim.*s.cpg.*rho_mahmood(...
    state.u(1,:),s.T,s.Pc,s.Tc) + (...
    1-s.phim).*(s.rhos).*(s.cps - (...
    s.MW.*(state.u(1,:)./(s.R.*(state.u(2,:).^2))).*adsorbed_derivative(...
    state.u(1,:),s.PL,s.VL)));

end
